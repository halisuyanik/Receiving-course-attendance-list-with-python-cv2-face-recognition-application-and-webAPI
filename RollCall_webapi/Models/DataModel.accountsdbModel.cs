//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 13.05.2019 00:50:32
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.ComponentModel;
using System.Reflection;
using System.Data.Common;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;

namespace RollCall_webapi
{

    public partial class accountsdbModel : DbContext
    {

        public accountsdbModel() :
            base()
        {
            OnCreated();
        }

        public accountsdbModel(DbContextOptions<accountsdbModel> options) :
            base(options)
        {
            OnCreated();
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured ||
                (!optionsBuilder.Options.Extensions.OfType<RelationalOptionsExtension>().Any(ext => !string.IsNullOrEmpty(ext.ConnectionString) || ext.Connection != null) &&
                 !optionsBuilder.Options.Extensions.Any(ext => !(ext is RelationalOptionsExtension) && !(ext is CoreOptionsExtension))))
            {
                optionsBuilder.UseSQLite(@"Data Source=C:\Users\HP\Desktop\RollCall_webapi\RollCall_webapi\accountsdb.db");
            }
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }

        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<EFMigrationsHistory> EFMigrationsHistories
        {
            get;
            set;
        }

        public virtual DbSet<Kullanicilar> Kullanicilars
        {
            get;
            set;
        }

        public virtual DbSet<EMY144NOB10May2019> EMY144NOB10May2019s
        {
            get;
            set;
        }

        public virtual DbSet<EMY144NOA10May2019> EMY144NOA10May2019s
        {
            get;
            set;
        }
        public object Mapping { get; internal set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            this.EFMigrationsHistoryMapping(modelBuilder);
            this.CustomizeEFMigrationsHistoryMapping(modelBuilder);

            this.KullanicilarMapping(modelBuilder);
            this.CustomizeKullanicilarMapping(modelBuilder);

            this.EMY144NOB10May2019Mapping(modelBuilder);
            this.CustomizeEMY144NOB10May2019Mapping(modelBuilder);

            this.EMY144NOA10May2019Mapping(modelBuilder);
            this.CustomizeEMY144NOA10May2019Mapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }

        #region EFMigrationsHistory Mapping

        private void EFMigrationsHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<EFMigrationsHistory>().ToTable(@"__EFMigrationsHistory");
            modelBuilder.Entity<EFMigrationsHistory>().Property<string>(x => x.MigrationId).HasColumnName(@"MigrationId").HasColumnType(@"TEXT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EFMigrationsHistory>().Property<string>(x => x.ProductVersion).HasColumnName(@"ProductVersion").HasColumnType(@"TEXT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EFMigrationsHistory>().HasKey(@"MigrationId");
        }

        partial void CustomizeEFMigrationsHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        #region Kullanicilar Mapping

        private void KullanicilarMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Kullanicilar>().ToTable(@"Kullanicilar");
            modelBuilder.Entity<Kullanicilar>().Property<long>(x => x.Id).HasColumnName(@"Id").HasColumnType(@"INTEGER").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Kullanicilar>().Property<string>(x => x.KAdi).HasColumnName(@"KAdi").HasColumnType(@"TEXT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Kullanicilar>().Property<string>(x => x.Sifre).HasColumnName(@"Sifre").HasColumnType(@"TEXT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Kullanicilar>().Property<string>(x => x.DersKodu).HasColumnName(@"DersKodu").HasColumnType(@"TEXT").ValueGeneratedNever();
            modelBuilder.Entity<Kullanicilar>().HasKey(@"Id");
        }

        partial void CustomizeKullanicilarMapping(ModelBuilder modelBuilder);

        #endregion

        #region EMY144NOB10May2019 Mapping

        private void EMY144NOB10May2019Mapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<EMY144NOB10May2019>().ToTable(@"EMY144NOB10May2019");
            modelBuilder.Entity<EMY144NOB10May2019>().Property<int>(x => x.Id).HasColumnName(@"Id").HasColumnType(@"INT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOB10May2019>().Property<string>(x => x.Zaman).HasColumnName(@"Zaman").HasColumnType(@"TEXT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOB10May2019>().Property<string>(x => x.AdSoyad).HasColumnName(@"AdSoyad").HasColumnType(@"TEXT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOB10May2019>().Property<int>(x => x.No).HasColumnName(@"No").HasColumnType(@"INT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOB10May2019>().Property<string>(x => x.Bolum).HasColumnName(@"Bolum").HasColumnType(@"TEXT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOB10May2019>().Property<int?>(x => x.Yas).HasColumnName(@"Yas").HasColumnType(@"INT").ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOB10May2019>().Property<string>(x => x.Cinsiyet).HasColumnName(@"Cinsiyet").HasColumnType(@"Text").ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOB10May2019>().HasKey(@"Id");
        }

        partial void CustomizeEMY144NOB10May2019Mapping(ModelBuilder modelBuilder);

        #endregion

        #region EMY144NOA10May2019 Mapping

        private void EMY144NOA10May2019Mapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<EMY144NOA10May2019>().ToTable(@"EMY144NOA10May2019");
            modelBuilder.Entity<EMY144NOA10May2019>().Property<int>(x => x.Id).HasColumnName(@"Id").HasColumnType(@"INT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOA10May2019>().Property<string>(x => x.Zaman).HasColumnName(@"Zaman").HasColumnType(@"TEXT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOA10May2019>().Property<string>(x => x.AdSoyad).HasColumnName(@"AdSoyad").HasColumnType(@"TEXT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOA10May2019>().Property<int>(x => x.No).HasColumnName(@"No").HasColumnType(@"INT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOA10May2019>().Property<string>(x => x.Bolum).HasColumnName(@"Bolum").HasColumnType(@"TEXT").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOA10May2019>().Property<int?>(x => x.Yas).HasColumnName(@"Yas").HasColumnType(@"INT").ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOA10May2019>().Property<string>(x => x.Cinsiyet).HasColumnName(@"Cinsiyet").HasColumnType(@"Text").ValueGeneratedNever();
            modelBuilder.Entity<EMY144NOA10May2019>().HasKey(@"Id");
        }

        partial void CustomizeEMY144NOA10May2019Mapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}
